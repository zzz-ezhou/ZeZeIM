syntax = "v1"

type (
	// 定义注册接口的请求体
	RegisterReq {
		Name     string `json:"name"`
		Password string `json:"password"`
	}
	// 定义注册接口的响应体
	RegisterResp {
		Token  string `json:"token"`
		Expire int64  `json:"expire"`
	}
	// 定义登录接口的请求体
	LoginReq {
		Name     string `json:"name"`
		Password string `json:"password"`
	}
	// 定义登录接口的响应体
	LoginResp {
		Token  string `json:"token"`
		Expire int64  `json:"expire"`
	}
	// 定义获取所有用户的请求体
	AllUserReq  {}
	// 定义获取所有用户的响应体
	AllUserResp {
		Users []UserEntity `json:"users"`
	}
	// 定义查找用户的请求体
	FindUserReq {
		Name string `json:"name"`
		Id   string `json:"id"`
	}
	// 定义查找用户的响应体
	FindUserResp {
		Users []UserEntity `json:"users"`
	}
	// 定义用户实体
	UserEntity {
		Id   string `json:"id"`
		Name string `json:"name"`
	}
)

// 需要登录
@server (
	prefix: user
	group:  user
	jwt:    JwtAuth
)
service user {
	@doc "获取所有好友"
	@handler alluser
	get /alluser (AllUserReq) returns (AllUserResp)

	@doc "删除好友"
	@handler alluser
	get /alluser (AllUserReq) returns (AllUserResp)
	@doc "发送好友请求"
	@handler alluser
	get /alluser (AllUserReq) returns (AllUserResp)
	@doc "获取所有好友"
	@handler alluser
	get /alluser (AllUserReq) returns (AllUserResp)

	@doc "查找用户"
	@handler find_user
	get /find_user (FindUserReq) returns (FindUserResp)
}

