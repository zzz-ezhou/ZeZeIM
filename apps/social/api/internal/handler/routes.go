// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"ZeZeIM/apps/social/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 好友申请
				Method:  http.MethodPost,
				Path:    "/friend/putIn",
				Handler: friendPutInHandler(serverCtx),
			},
			{
				// 好友申请处理
				Method:  http.MethodPut,
				Path:    "/friend/putIn",
				Handler: friendPutInHandleHandler(serverCtx),
			},
			{
				// 好友申请列表
				Method:  http.MethodGet,
				Path:    "/friend/putIns",
				Handler: friendPutInListHandler(serverCtx),
			},
			{
				// 好友列表
				Method:  http.MethodGet,
				Path:    "/friends",
				Handler: friendListHandler(serverCtx),
			},
			{
				// 创群
				Method:  http.MethodPost,
				Path:    "/group",
				Handler: createGroupHandler(serverCtx),
			},
			{
				// 申请进群
				Method:  http.MethodPost,
				Path:    "/group/putIn",
				Handler: groupPutInHandler(serverCtx),
			},
			{
				// 申请进群处理
				Method:  http.MethodPut,
				Path:    "/group/putIn",
				Handler: groupPutInHandleHandler(serverCtx),
			},
			{
				// 申请进群列表
				Method:  http.MethodGet,
				Path:    "/group/putIns",
				Handler: groupPutInListHandler(serverCtx),
			},
			{
				// 成员列表列表
				Method:  http.MethodGet,
				Path:    "/group/users",
				Handler: groupUserListHandler(serverCtx),
			},
			{
				// 用户申群列表
				Method:  http.MethodGet,
				Path:    "/groups",
				Handler: groupListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/social"),
	)
}
